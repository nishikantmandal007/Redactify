# Redactify - PDF PII Redaction Tool Requirements (CPU Mode)
# For GPU support, see requirements_gpu.txt.

# Core Dependencies
Flask>=2.0.0
PyMuPDF>=1.18.0  # For PDF processing
celery>=5.2.0  # For background task processing
redis>=3.5.3  # Required for Celery backend

# API Framework
fastapi>=0.104.0  # FastAPI framework
uvicorn>=0.23.2  # ASGI server for FastAPI
python-multipart>=0.0.6  # For file uploads in FastAPI

# PDF Processing
pdf2image>=1.16.0  # For converting PDF pages to images
pyzbar>=0.1.8  # For QR code detection

# Computer Vision & OCR
Pillow>=9.0.0  # Python Imaging Library
opencv-python-headless>=4.5.0  # Computer Vision library (headless for smaller size)
paddlepaddle>=2.5.0  # Deep learning framework used by PaddleOCR
paddleocr>=2.5.0  # OCR engine for text detection
layoutparser>=0.3.4  # For document layout analysis
pytesseract>=0.3.8  # OCR engine

# PII Detection
presidio-analyzer>=2.2.0  # Microsoft's PII detection library
presidio-anonymizer>=2.2.0
spacy>=3.2.0  # Required by Presidio for NLP

# Web Interface
Flask-Bootstrap>=3.3.7  # Bootstrap integration for Flask
Flask-WTF>=1.0.0  # Form handling for Flask
Flask-Session>=0.4.0  # Server-side session management
Werkzeug>=2.0.0  # WSGI utilities (required by Flask)

# Utilities
PyYAML>=6.0  # YAML parsing for configuration files
python-dotenv>=0.20.0  # Environment variable management
requests>=2.27.0  # HTTP library
shapely>=1.8.0  # Geometric operations library
psutil>=5.9.0  # System resource monitoring
gunicorn>=20.1.0  # WSGI HTTP Server for production
flower>=1.0.0  # Celery monitoring tool

# API Documentation
pydantic>=2.4.2  # Data validation for FastAPI

# CORS Support
starlette>=0.27.0  # ASGI toolkit (used by FastAPI)
aiofiles>=23.2.1  # For async file operations

# Testing and Development
pytest>=7.0.0  # Testing framework
pytest-cov>=3.0.0  # Test coverage
flake8>=4.0.0  # Code linting
black>=22.0.0  # Code formatting

# Additional Dependencies
numpy>=1.21.0  # Numerical computing
scipy>=1.8.0  # Scientific computing
matplotlib>=3.5.0  # Data visualization

# TensorFlow with built-in GPU support
# Starting with TensorFlow 2.13+, GPU and CPU are combined in a single package
# Using a version known to work with Python 3.11
tensorflow==2.19.0  # This version works with Python 3.11

# SpaCy - we'll install models separately in Dockerfile
# We don't directly specify model URLs here as they can cause Docker build issues
# Models will be installed with: python -m spacy download en_core_web_lg